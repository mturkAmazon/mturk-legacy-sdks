<project name = "Mechanical Turk .Net SDK build properties">
    <property name = "nant.onfailure" value = "onfailure"/>
    <property name = "src.dir" value = "../../Source"/>
    <property name = "sdk.version" value = "1.0.0.0"/>
    <property name = "wsdl.url" value = "http://mechanicalturk.amazonaws.com/AWSMechanicalTurk/AWSMechanicalTurkRequester.wsdl"/>
    <property name = "configuration" value = "Release"/>
    <property name = "msbuild.exe" value = "C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\MSBuild.exe"/>
	<!-- devenv is only used for release builds because msbuild does not support building of setup projects -->
    <property name = "devenv.exe" value = "C:\Program Files\Microsoft Visual Studio 8\Common7\IDE\devenv.exe"/>
	<!-- 
		the NDoc builder to create the SDK documentation (use either Noc2.0 alpha or the one shipped with SharpDevelop 
		ultimately this might become a sandcastle task
	-->
    <property name = "ndoc.exe" value = "C:\dev\DotNet\tools\NDoc2-Alpha3u\NDocConsole.exe"/>
	<!-- Ilmerge is used to merge the two SDK assemblies into one (plus optionally sign it) -->
    <property name = "ilmerge.exe" value = "C:\dev\DotNet\tools\ilmerge\ilmerge.exe"/>
	<!-- if specified ilmerge signs the target assembly with this key -->
    <!-- property name = "ilmerge.signature" value = "./MyKey.snk"/ -->
    <property name = "mail.mailhost" value = "smtp.bar.com"/>
    <property name = "mail.from" value = "build_system@bar.com"/>
    <property name = "mail.failure.to" value = "foo@bar.com"/>
    <property name = "mail.success.to" value = "foo@bar.com"/>
</project>
